#!/bin/bash
# pvm: Particle Version Manager
# pvm photon 0.6.3 firmware.bin

# Get arguments

DFUBAUDRATE="14400"

for modem in /dev/cu.usbmodem*
do
  MODEM="$modem"
done

flash_binary()
{  echo "flashing $1"
  particle flash --usb "$1"
}

dfu()
{
    if [[ "$1" == "open" ]]; then
    if [ -e "$MODEM" ];
    then
        stty -f "$MODEM" "$DFUBAUDRATE" > /dev/null
    fi
    else
      dfu-util -d "$DFU_ADDRESS1" -a 0 -i 0 -s "$DFU_ADDRESS2":leave -D /dev/null &> /dev/null
    fi
}

if [[ "$1" == "photon" ]] || [[ "$1" == "p1" ]] || [[ "$1" == "electron" ]]; then
  PLATFORM="$1"
  VERSION="$2"
  echo "Downloading $VERSION for $PLATFORM..."
  echo
fi

if [ "$PLATFORM" == "photon" ];
then
  DFU_ADDRESS1="2b04:d006"
  DFU_ADDRESS2="0x080A0000"
fi
if [ "$PLATFORM" == "p1" ];
then
  DFU_ADDRESS1="2b04:d008"
  DFU_ADDRESS2="0x080A0000"
fi
if [ "$PLATFORM" == "electron" ];
then
  DFU_ADDRESS1="2b04:d00a"
  DFU_ADDRESS2="0x08080000"
fi

# get firmware binaries

SYSTEM_PARTS=$(curl -s "https://api.github.com/repos/particle-iot/firmware/releases" | grep "\"name\":" | grep -oE "system-part(.*?)bin" | grep "${VERSION}-${PLATFORM}.bin")

if [[ -z "$SYSTEM_PARTS" ]]; then
  echo "Could not find ${VERSION} for ${PLATFORM}" && exit
else
  echo "$SYSTEM_PARTS"
  echo
fi

# exit

echo "$MODEM"

[[ -d "bin" ]] || mkdir "bin"

for PART in $SYSTEM_PARTS ; do
  dfu open
  curl -sLo "bin/$PART" "https://github.com/particle-iot/firmware/releases/download/v${VERSION}/$PART"
  flash_binary "bin/$PART"
  echo
  sleep 3
done

dfu close


















#
