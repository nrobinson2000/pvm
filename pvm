#!/bin/bash
# pvm: Particle Version Manager
# pvm photon 0.6.3 firmware.bin

# Get arguments

flash_binary()
{
  dfu-util -d "$DFU_ADDRESS1" -a 0 -i 0 -s "$DFU_ADDRESS2":leave -D "$1"#&> /dev/null
}

dfu_open()
{
DFU_LIST="$(dfu-util -l)"

if echo "$DFU_LIST" | grep "2b04:d006" > /dev/null || echo "$DFU_LIST" | grep "2b04:d008" > /dev/null ||  echo "$DFU_LIST" | grep "2b04:d00a" > /dev/null || echo "$DFU_LIST" | grep "1d50:607f" > /dev/null || echo "$DFU_LIST" | grep "2b04:d058" > /dev/null ;
then
  blue_echo "
Already found a device in DFU mode!
"
  return
fi

if [ "$1" == "-d" ] || [ "$1" == "--device" ];
then

  if [[ -e "$2" ]]; # Check if serial port is avaliable
  then
  blue_echo "
Placing device $2 into DFU mode...
"
  stty -f "$2" "$DFUBAUDRATE" > /dev/null
  return

else
  red_echo "
Could not find a device on $2
  "
  fi

  return
fi

    if [ "$DEVICE_TYPE" == "duo" ];
    then
        if [ -e "$MODEM_DUO" ];
        then
            MODEM="$MODEM_DUO"
        else
            echo
            red_echo "Device not found!"
            echo
            blue_echo "Your device must be connected by USB."
            echo
            exit
        fi
    else
        if [ -e "$MODEM" ];
        then
            MODEM="$MODEM"
        else
            echo
            red_echo "Device not found!"
            echo
            blue_echo "Your device must be connected by USB."
            echo
            exit
        fi
    fi

    if [ -e "$MODEM" ];
    then
        stty -f "$MODEM" "$DFUBAUDRATE" > /dev/null
    fi
}

if [[ "$1" == "photon" ]] || [[ "$1" == "p1" ]] || [[ "$1" == "electron" ]]; then
  PLATFORM="$1"
  VERSION="$2"
  echo "Downloading $VERSION for $PLATFORM..."
  echo
fi

if [ "$PLATFORM" == "photon" ];
then
  DFU_ADDRESS1="2b04:d006"
  DFU_ADDRESS2="0x080A0000"
fi
if [ "$PLATFORM" == "p1" ];
then
  DFU_ADDRESS1="2b04:d008"
  DFU_ADDRESS2="0x080A0000"
fi
if [ "$PLATFORM" == "electron" ];
then
  DFU_ADDRESS1="2b04:d00a"
  DFU_ADDRESS2="0x08080000"
fi

# get firmware binaries

SYSTEM_PARTS=$(curl -s "https://api.github.com/repos/particle-iot/firmware/releases" | grep "\"name\":" | grep -oE "system-part(.*?)bin" | grep "${VERSION}-${PLATFORM}.bin")

if [[ -z "$SYSTEM_PARTS" ]]; then
  echo "Could not find ${VERSION} for ${PLATFORM}" && exit
else
  echo "$SYSTEM_PARTS"
  echo
fi

dfu_open

for PART in $SYSTEM_PARTS ; do
  curl -sLo "bin/$PART" "https://github.com/particle-iot/firmware/releases/download/v${VERSION}/$PART"
  flash_binary "bin/$PART"
  sleep 1
done


















#
